<Window x:Class="InTime.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:lvc="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
        Title="InTime" Height="720" Width="1280" Loaded="WindowLoaded" Closing="WindowClosing"
        Background="#E9E9E9">

    <!-- Used for the checkbox if the dancer is seated or not.  If is seated, uses a different
        skeletal model -->
    <Window.Resources>
        <SolidColorBrush x:Key="MediumGreyBrush" Color="#6e6e6e"/>
        <SolidColorBrush x:Key="DarkGreyBrush" Color="#595959"/>
        <Style TargetType="{x:Type Image}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
        </Style>
        <Style TargetType="{x:Type CheckBox}" x:Key="SquareCheckBox" >
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid>
                            <StackPanel Orientation="Horizontal" Background="Transparent">
                                <Grid x:Name="SquareCheckBoxChecked">
                                    <Image x:Name="CheckedNormal" Source="Images\CheckedNormal.png" Stretch="None" HorizontalAlignment="Center"/>
                                    <Image x:Name="CheckedHover" Source="Images\CheckedHover.png" Stretch="None" HorizontalAlignment="Center" Visibility="Collapsed"/>
                                </Grid>
                                <Grid x:Name="SquareCheckBoxUnchecked" Visibility="Collapsed">
                                    <Image x:Name="UncheckedNormal" Source="Images\UncheckedNormal.png" Stretch="None" HorizontalAlignment="Center"/>
                                    <Image x:Name="UncheckedHover" Source="Images\UncheckedHover.png" Stretch="None" HorizontalAlignment="Center" Visibility="Collapsed"/>
                                </Grid>
                                <TextBlock x:Name="SquareCheckBoxText" Text="{TemplateBinding Content}" TextAlignment="Left"  VerticalAlignment="Center" Foreground="{StaticResource MediumGreyBrush}" FontSize="40"  Margin="9,0,0,0"/>
                            </StackPanel>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="false">
                                <Setter Property="Visibility" Value="Collapsed" TargetName="SquareCheckBoxChecked"/>
                                <Setter Property="Visibility" Value="Visible" TargetName="SquareCheckBoxUnchecked"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Visibility" Value="Collapsed" TargetName="CheckedNormal"/>
                                <Setter Property="Visibility" Value="Collapsed" TargetName="UncheckedNormal"/>
                                <Setter Property="Visibility" Value="Visible" TargetName="CheckedHover"/>
                                <Setter Property="Visibility" Value="Visible" TargetName="UncheckedHover"/>
                                <Setter Property="Foreground" Value="{StaticResource DarkGreyBrush}" TargetName="SquareCheckBoxText"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid Name="layoutGrid" Margin="10 10 10 0">
        <!-- Sets up the grid for the UI -->
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="0.5*"/>
            <RowDefinition Height="0.5*"/>
        </Grid.RowDefinitions>

        <Grid Grid.Column="0" Grid.Row="0" Grid.RowSpan="1" Margin="0, 0, 10, 5">
            <Grid.Effect>
                <!-- drop shadow-->
                <DropShadowEffect BlurRadius="20" Direction="-90" RenderingBias="Quality" Opacity=".2" ShadowDepth="1"/>
            </Grid.Effect>
            <Grid.OpacityMask>
                <VisualBrush Visual="{Binding ElementName=Border1}" />
            </Grid.OpacityMask>
            <Grid.Resources>
                <Style TargetType="lvc:LineSeries">
                    <Setter Property="StrokeThickness" Value="2"></Setter>
                    <Setter Property="Stroke" Value="White"></Setter>
                    <Setter Property="Fill" Value="Black"></Setter>
                    <Setter Property="PointGeometrySize" Value="0"></Setter>
                    <Setter Property="LineSmoothness" Value="0.5"></Setter>
                </Style>
                <Style TargetType="lvc:Axis">
                    <Setter Property="ShowLabels" Value="False"></Setter>
                    <Setter Property="IsEnabled" Value="False"></Setter>
                </Style>
            </Grid.Resources>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height=".5*"></RowDefinition>
            </Grid.RowDefinitions>
            <Border x:Name="Border1" Grid.Row="0" Grid.RowSpan="3" CornerRadius="5" Background="White" />
            <Border Grid.Row="0" Grid.RowSpan="3" Background="Black" ></Border>
            <TextBlock Grid.Row="0" HorizontalAlignment="Center" TextAlignment="Center" Padding="0, 10, 0, 10" Foreground="White" FontSize="18">
                Left Arm
            </TextBlock>
            <TextBlock Name="leftText" Grid.Row="1" HorizontalAlignment="Center" TextAlignment="Center" Foreground="#59FFFFFF" Padding="0,0,0,10">
                N/A BPM
            </TextBlock>
            <!-- minus padding means that there are no unslightly black borders turning up from hiding the axis -->
            <lvc:CartesianChart Grid.Row="2" Margin="-4, 0, 0, 0" Series="{Binding LeftArmCollection}" Hoverable="False" DataTooltip="{x:Null}">
                <lvc:CartesianChart.AxisX>
                    <!--a small visual improvement, lets hide the first points (x = 0, x=1) to get better animations-->
                    <lvc:Axis MinValue="2"></lvc:Axis>
                </lvc:CartesianChart.AxisX>
                <lvc:CartesianChart.AxisY>
                    <lvc:Axis MinValue="-0.5" MaxValue="1.5"></lvc:Axis>
                </lvc:CartesianChart.AxisY>
            </lvc:CartesianChart>
        </Grid>

        <Grid Grid.Column="0" Grid.Row="1" Margin="0, 10, 0, 10">
            <TextBlock Name="recordingCounter" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="50" Foreground="{StaticResource MediumGreyBrush}">N/A</TextBlock>
            <TextBlock Name="recordingLabel" HorizontalAlignment="Center" VerticalAlignment="Bottom" FontSize="30" Foreground="{StaticResource MediumGreyBrush}">Not Recording</TextBlock>
        </Grid>

        <Grid Grid.Column="3" Grid.Row="0" Grid.RowSpan="1" Margin="10, 0, 0, 5">
            <Grid.Effect>
                <!-- drop shadow-->
                <DropShadowEffect BlurRadius="20" Direction="-90" RenderingBias="Quality" Opacity=".2" ShadowDepth="1"/>
            </Grid.Effect>
            <Grid.OpacityMask>
                <VisualBrush Visual="{Binding ElementName=Border1}" />
            </Grid.OpacityMask>
            <Grid.Resources>
                <Style TargetType="lvc:LineSeries">
                    <Setter Property="StrokeThickness" Value="2"></Setter>
                    <Setter Property="Stroke" Value="#00FF00"></Setter>
                    <Setter Property="Fill" Value="Black"></Setter>
                    <Setter Property="PointGeometrySize" Value="0"></Setter>
                    <Setter Property="LineSmoothness" Value="0.5"></Setter>
                </Style>
                <Style TargetType="lvc:Axis">
                    <Setter Property="ShowLabels" Value="False"></Setter>
                    <Setter Property="IsEnabled" Value="False"></Setter>
                </Style>
            </Grid.Resources>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height=".5*"></RowDefinition>
            </Grid.RowDefinitions>
            <Border Grid.Row="0" Grid.RowSpan="3" CornerRadius="5" Background="White" />
            <Border Grid.Row="0" Grid.RowSpan="3" Background="Black" ></Border>
            <TextBlock Grid.Row="0" HorizontalAlignment="Center" TextAlignment="Center" Padding="0, 10, 0, 10" Foreground="White" FontSize="18">
                Right Arm
            </TextBlock>
            <TextBlock Name="rightText" Grid.Row="1" HorizontalAlignment="Center" TextAlignment="Center" Foreground="#59FFFFFF" Padding="0,0,0,10">
                N/A BPM
            </TextBlock>
            <!-- minus padding means that there are no unslightly black borders turning up from hiding the axis -->
            <lvc:CartesianChart Grid.Row="2" Margin="-4, 0, 0, 0" Series="{Binding RightArmCollection}" Hoverable="False" DataTooltip="{x:Null}">
                <lvc:CartesianChart.AxisX>
                    <!--a small visual improvement, lets hide the first points (x = 0, x=1) to get better animations-->
                    <lvc:Axis MinValue="2"></lvc:Axis>
                </lvc:CartesianChart.AxisX>
                <lvc:CartesianChart.AxisY>
                    <lvc:Axis MinValue="-0.5" MaxValue="1.5"></lvc:Axis>
                </lvc:CartesianChart.AxisY>
            </lvc:CartesianChart>
        </Grid>

        <Grid Grid.Column="3" Grid.Row="1" Grid.RowSpan="1" Margin="0, 10, 0, 10">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="3*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Row="0" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center" FontSize="30" Foreground="{StaticResource MediumGreyBrush}">
                    Sax
                </TextBlock>
                <TextBlock Grid.Row="0" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Bottom" TextAlignment="Center" FontSize="30" Foreground="{StaticResource MediumGreyBrush}">
                    Piano
                </TextBlock>
                <TextBlock Grid.Row="0" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Top" TextAlignment="Center" FontSize="30" Foreground="{StaticResource MediumGreyBrush}">
                    Synth
                </TextBlock>
                <TextBlock Grid.Row="0" Grid.Column="2" HorizontalAlignment="Right" VerticalAlignment="Center" TextAlignment="Center" FontSize="30" Foreground="{StaticResource MediumGreyBrush}">
                    Bass
                </TextBlock>
                <TextBlock Name="labelAngleForIntrument" Visibility="Collapsed" Grid.Row="0" Grid.Column="2" HorizontalAlignment="Right" VerticalAlignment="Center" TextAlignment="Center" FontSize="30" Foreground="{StaticResource MediumGreyBrush}">
                    0
                </TextBlock>
            </Grid>
            <Line Margin="62, 40, 62, 40" X1="0.3" Y1="0" X2="0.5" Y2="0" Stretch="Uniform" Stroke="LightGray" StrokeThickness="2"></Line>
            <Line Margin="62, 40, 62, 40" X1="0" Y1="0" X2="0" Y2="1" Stretch="Uniform" Stroke="LightGray" StrokeThickness="2"></Line>
            <Line Name="bullshitline" Margin="60, 40, 60, 103" X1="0" Y1="0" X2="0" Y2="1" Stretch="Uniform" Stroke="Blue" StrokeThickness="2" RenderTransformOrigin="0, 1">
                <Line.RenderTransform>
                    <RotateTransform Angle="{Binding ElementName=labelAngleForIntrument, Path=Text}" /> 
                </Line.RenderTransform> 
            </Line>
        </Grid>

        <!-- Where the skeleton is displayed -->
        <!-- while the kinect is loading -->
        <StatusBar Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2" Grid.RowSpan="3" HorizontalAlignment="Center" Name="status" VerticalAlignment="Center" Background="#E9E9E9" Foreground="{StaticResource MediumGreyBrush}">
            <TextBlock TextAlignment="Center" FontSize="20" Name="statusText" Margin="0 0 0 0">Loading Kinect...</TextBlock>
        </StatusBar>
        <Viewbox Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2" Grid.RowSpan="3" Stretch="Uniform" HorizontalAlignment="Center" Margin="0,10,0,0">
            <!-- needs 640x480 as highest res kinect can go -->
            <Image Name="Image" Width="640" Height="480"/>
        </Viewbox>
        
        <!-- checkbox centre alignment -->
        <CheckBox Grid.Row="3" Grid.Column="1" 
             Style="{StaticResource SquareCheckBox}" 
             FlowDirection="RightToLeft" 
             Content="?Seated" Height="Auto" 
             HorizontalAlignment="Center" 
             VerticalAlignment="Center" 
             Margin="0 10 10 10" 
             Name="checkBoxSeatedMode"
             Checked="CheckBoxSeatedModeChanged" 
             Unchecked="CheckBoxSeatedModeChanged"
        />
        
        <!-- bpm bar-->
        <Grid Grid.Row="3" Grid.Column="2">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <TextBlock Name="bpmCounterLabel" Grid.Row="0" HorizontalAlignment="Center" VerticalAlignment="Bottom" TextAlignment="Center" FontSize="50" Foreground="{StaticResource MediumGreyBrush}">
                N/A
            </TextBlock>
            <TextBlock Name="bpmCalculatingLabel" Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Top" TextAlignment="Center" FontSize="30" Foreground="{StaticResource MediumGreyBrush}" Margin="6, 0, 0, 0">
                BPM
            </TextBlock>
        </Grid>
    </Grid>
</Window>
